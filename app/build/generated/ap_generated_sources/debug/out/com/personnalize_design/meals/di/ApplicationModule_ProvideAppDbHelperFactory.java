// Generated by Dagger (https://dagger.dev).
package com.personnalize_design.meals.di;

import com.personnalize_design.meals.data.db.DbHelper;
import com.personnalize_design.meals.data.db.MealsDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideAppDbHelperFactory implements Factory<DbHelper> {
  private final ApplicationModule module;

  private final Provider<MealsDatabase> dbProvider;

  public ApplicationModule_ProvideAppDbHelperFactory(ApplicationModule module,
      Provider<MealsDatabase> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public DbHelper get() {
    return provideAppDbHelper(module, dbProvider.get());
  }

  public static ApplicationModule_ProvideAppDbHelperFactory create(ApplicationModule module,
      Provider<MealsDatabase> dbProvider) {
    return new ApplicationModule_ProvideAppDbHelperFactory(module, dbProvider);
  }

  public static DbHelper provideAppDbHelper(ApplicationModule instance, MealsDatabase db) {
    return Preconditions.checkNotNull(instance.provideAppDbHelper(db), "Cannot return null from a non-@Nullable @Provides method");
  }
}
